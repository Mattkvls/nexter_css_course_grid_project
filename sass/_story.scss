.story{
    &__pictures{
        background-color: $color-primary;
        grid-column:full-start/col-end 4;
        background-image:linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/back.jpg);

        display:grid;
        grid-template-rows: repeat(6, 1fr);
        grid-template-columns: repeat(6, 1fr);

        //will center the image after the positioning.
        align-items:center;
    }

    &__img--1{
        width: 100%;
        grid-row:2/6;
        grid-column:2/6;
        box-shadow: 0 2rem 5rem rgba(#000, .2);
    }
    &__img--2{
        //width: 100%;
        grid-row:4/6 ;
        grid-column: 4/7;

        //we make it a little wider so it spans to the other part of the story.
        width: 115%;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(#000, .2);
    }




    &__content{
        background-color:$color-grey_light-1;
        grid-column:col-start 5/full-end;

        //padding:6rem 12rem;
        padding:6rem 8vw;// will make the padding responsive while we resize the window. The vw (viwportwidth) is a relative unit for responsive layouts. use it more and more.

        //make it flex container to center inside of it all the items vertically
        display:flex;

        //by using colum--> the main axis is now the vertical axis and we have to use the main axis properties0
        flex-direction: column;
        justify-content: center;
        align-items:flex-start;// will fix the button that goes from one side to other.. because of the default value that is stretch

        //SECOND WAY
        //with the Grid we would do :
        //display:grid;
        //align-content:center;
        //justify-items:start; will fix the button problem 
    }

    &__text{
        font-size: 1.5rem;
        font-style: italic;
        //we add a margin bottom direct to the element because it is Not a reusable element 
        margin-bottom: 4rem;
    }
}